// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: api/device_profile.proto

package api

import (
	common "github.com/chirpstack/chirpstack/api/go/v4/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CodecRuntime int32

const (
	// None.
	CodecRuntime_NONE CodecRuntime = 0
	// Cayenne LPP.
	CodecRuntime_CAYENNE_LPP CodecRuntime = 1
	// JavaScript.
	CodecRuntime_JS CodecRuntime = 2
)

// Enum value maps for CodecRuntime.
var (
	CodecRuntime_name = map[int32]string{
		0: "NONE",
		1: "CAYENNE_LPP",
		2: "JS",
	}
	CodecRuntime_value = map[string]int32{
		"NONE":        0,
		"CAYENNE_LPP": 1,
		"JS":          2,
	}
)

func (x CodecRuntime) Enum() *CodecRuntime {
	p := new(CodecRuntime)
	*p = x
	return p
}

func (x CodecRuntime) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CodecRuntime) Descriptor() protoreflect.EnumDescriptor {
	return file_api_device_profile_proto_enumTypes[0].Descriptor()
}

func (CodecRuntime) Type() protoreflect.EnumType {
	return &file_api_device_profile_proto_enumTypes[0]
}

func (x CodecRuntime) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CodecRuntime.Descriptor instead.
func (CodecRuntime) EnumDescriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{0}
}

type MeasurementKind int32

const (
	// Unknown (in which case it is not tracked).
	MeasurementKind_UNKNOWN MeasurementKind = 0
	// Incrementing counters that never decrease (these are not reset on each
	// reading).
	MeasurementKind_COUNTER MeasurementKind = 1
	// Counters that do get reset upon reading.
	MeasurementKind_ABSOLUTE MeasurementKind = 2
	// E.g. a temperature value.
	MeasurementKind_GAUGE MeasurementKind = 3
	// E.g. a firmware version, true / false value.
	MeasurementKind_STRING MeasurementKind = 4
)

// Enum value maps for MeasurementKind.
var (
	MeasurementKind_name = map[int32]string{
		0: "UNKNOWN",
		1: "COUNTER",
		2: "ABSOLUTE",
		3: "GAUGE",
		4: "STRING",
	}
	MeasurementKind_value = map[string]int32{
		"UNKNOWN":  0,
		"COUNTER":  1,
		"ABSOLUTE": 2,
		"GAUGE":    3,
		"STRING":   4,
	}
)

func (x MeasurementKind) Enum() *MeasurementKind {
	p := new(MeasurementKind)
	*p = x
	return p
}

func (x MeasurementKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeasurementKind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_device_profile_proto_enumTypes[1].Descriptor()
}

func (MeasurementKind) Type() protoreflect.EnumType {
	return &file_api_device_profile_proto_enumTypes[1]
}

func (x MeasurementKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeasurementKind.Descriptor instead.
func (MeasurementKind) EnumDescriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{1}
}

type CadPeriodicity int32

const (
	// 1 second.
	CadPeriodicity_SEC_1 CadPeriodicity = 0
	// 500 milliseconds
	CadPeriodicity_MS_500 CadPeriodicity = 1
	// 250 milliseconds
	CadPeriodicity_MS_250 CadPeriodicity = 2
	// 100 milliseconds
	CadPeriodicity_MS_100 CadPeriodicity = 3
	// 50 milliseconds
	CadPeriodicity_MS_50 CadPeriodicity = 4
	// 20 milliseconds
	CadPeriodicity_MS_20 CadPeriodicity = 5
)

// Enum value maps for CadPeriodicity.
var (
	CadPeriodicity_name = map[int32]string{
		0: "SEC_1",
		1: "MS_500",
		2: "MS_250",
		3: "MS_100",
		4: "MS_50",
		5: "MS_20",
	}
	CadPeriodicity_value = map[string]int32{
		"SEC_1":  0,
		"MS_500": 1,
		"MS_250": 2,
		"MS_100": 3,
		"MS_50":  4,
		"MS_20":  5,
	}
)

func (x CadPeriodicity) Enum() *CadPeriodicity {
	p := new(CadPeriodicity)
	*p = x
	return p
}

func (x CadPeriodicity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CadPeriodicity) Descriptor() protoreflect.EnumDescriptor {
	return file_api_device_profile_proto_enumTypes[2].Descriptor()
}

func (CadPeriodicity) Type() protoreflect.EnumType {
	return &file_api_device_profile_proto_enumTypes[2]
}

func (x CadPeriodicity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CadPeriodicity.Descriptor instead.
func (CadPeriodicity) EnumDescriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{2}
}

type SecondChAckOffset int32

const (
	// 0 kHz.
	SecondChAckOffset_KHZ_0 SecondChAckOffset = 0
	// 200 kHz.
	SecondChAckOffset_KHZ_200 SecondChAckOffset = 1
	// 400 kHz.
	SecondChAckOffset_KHZ_400 SecondChAckOffset = 2
	// 800 kHz.
	SecondChAckOffset_KHZ_800 SecondChAckOffset = 3
	// 1600 kHz.
	SecondChAckOffset_KHZ_1600 SecondChAckOffset = 4
	// 3200 kHz.
	SecondChAckOffset_KHZ_3200 SecondChAckOffset = 5
)

// Enum value maps for SecondChAckOffset.
var (
	SecondChAckOffset_name = map[int32]string{
		0: "KHZ_0",
		1: "KHZ_200",
		2: "KHZ_400",
		3: "KHZ_800",
		4: "KHZ_1600",
		5: "KHZ_3200",
	}
	SecondChAckOffset_value = map[string]int32{
		"KHZ_0":    0,
		"KHZ_200":  1,
		"KHZ_400":  2,
		"KHZ_800":  3,
		"KHZ_1600": 4,
		"KHZ_3200": 5,
	}
)

func (x SecondChAckOffset) Enum() *SecondChAckOffset {
	p := new(SecondChAckOffset)
	*p = x
	return p
}

func (x SecondChAckOffset) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecondChAckOffset) Descriptor() protoreflect.EnumDescriptor {
	return file_api_device_profile_proto_enumTypes[3].Descriptor()
}

func (SecondChAckOffset) Type() protoreflect.EnumType {
	return &file_api_device_profile_proto_enumTypes[3]
}

func (x SecondChAckOffset) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecondChAckOffset.Descriptor instead.
func (SecondChAckOffset) EnumDescriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{3}
}

type RelayModeActivation int32

const (
	// Disable the relay mode.
	RelayModeActivation_DISABLE_RELAY_MODE RelayModeActivation = 0
	// Enable the relay model.
	RelayModeActivation_ENABLE_RELAY_MODE RelayModeActivation = 1
	// Dynamic.
	RelayModeActivation_DYNAMIC RelayModeActivation = 2
	// End-device controlled.
	RelayModeActivation_END_DEVICE_CONTROLLED RelayModeActivation = 3
)

// Enum value maps for RelayModeActivation.
var (
	RelayModeActivation_name = map[int32]string{
		0: "DISABLE_RELAY_MODE",
		1: "ENABLE_RELAY_MODE",
		2: "DYNAMIC",
		3: "END_DEVICE_CONTROLLED",
	}
	RelayModeActivation_value = map[string]int32{
		"DISABLE_RELAY_MODE":    0,
		"ENABLE_RELAY_MODE":     1,
		"DYNAMIC":               2,
		"END_DEVICE_CONTROLLED": 3,
	}
)

func (x RelayModeActivation) Enum() *RelayModeActivation {
	p := new(RelayModeActivation)
	*p = x
	return p
}

func (x RelayModeActivation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelayModeActivation) Descriptor() protoreflect.EnumDescriptor {
	return file_api_device_profile_proto_enumTypes[4].Descriptor()
}

func (RelayModeActivation) Type() protoreflect.EnumType {
	return &file_api_device_profile_proto_enumTypes[4]
}

func (x RelayModeActivation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelayModeActivation.Descriptor instead.
func (RelayModeActivation) EnumDescriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{4}
}

type Ts003Version int32

const (
	// Not implemented.
	Ts003Version_TS003_NOT_IMPLEMENTED Ts003Version = 0
	// v1.0.0.
	Ts003Version_TS003_V100 Ts003Version = 1
	// v2.0.0
	Ts003Version_TS003_v200 Ts003Version = 2
)

// Enum value maps for Ts003Version.
var (
	Ts003Version_name = map[int32]string{
		0: "TS003_NOT_IMPLEMENTED",
		1: "TS003_V100",
		2: "TS003_v200",
	}
	Ts003Version_value = map[string]int32{
		"TS003_NOT_IMPLEMENTED": 0,
		"TS003_V100":            1,
		"TS003_v200":            2,
	}
)

func (x Ts003Version) Enum() *Ts003Version {
	p := new(Ts003Version)
	*p = x
	return p
}

func (x Ts003Version) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ts003Version) Descriptor() protoreflect.EnumDescriptor {
	return file_api_device_profile_proto_enumTypes[5].Descriptor()
}

func (Ts003Version) Type() protoreflect.EnumType {
	return &file_api_device_profile_proto_enumTypes[5]
}

func (x Ts003Version) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ts003Version.Descriptor instead.
func (Ts003Version) EnumDescriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{5}
}

type Ts004Version int32

const (
	// Not implemented.
	Ts004Version_TS004_NOT_IMPLEMENTED Ts004Version = 0
	// v1.0.0.
	Ts004Version_TS004_V100 Ts004Version = 1
	// v2.0.0
	Ts004Version_TS004_V200 Ts004Version = 2
)

// Enum value maps for Ts004Version.
var (
	Ts004Version_name = map[int32]string{
		0: "TS004_NOT_IMPLEMENTED",
		1: "TS004_V100",
		2: "TS004_V200",
	}
	Ts004Version_value = map[string]int32{
		"TS004_NOT_IMPLEMENTED": 0,
		"TS004_V100":            1,
		"TS004_V200":            2,
	}
)

func (x Ts004Version) Enum() *Ts004Version {
	p := new(Ts004Version)
	*p = x
	return p
}

func (x Ts004Version) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ts004Version) Descriptor() protoreflect.EnumDescriptor {
	return file_api_device_profile_proto_enumTypes[6].Descriptor()
}

func (Ts004Version) Type() protoreflect.EnumType {
	return &file_api_device_profile_proto_enumTypes[6]
}

func (x Ts004Version) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ts004Version.Descriptor instead.
func (Ts004Version) EnumDescriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{6}
}

type Ts005Version int32

const (
	// Not implemented.
	Ts005Version_TS005_NOT_IMPLEMENTED Ts005Version = 0
	// v1.0.0.
	Ts005Version_TS005_V100 Ts005Version = 1
	// v2.0.0
	Ts005Version_TS005_V200 Ts005Version = 2
)

// Enum value maps for Ts005Version.
var (
	Ts005Version_name = map[int32]string{
		0: "TS005_NOT_IMPLEMENTED",
		1: "TS005_V100",
		2: "TS005_V200",
	}
	Ts005Version_value = map[string]int32{
		"TS005_NOT_IMPLEMENTED": 0,
		"TS005_V100":            1,
		"TS005_V200":            2,
	}
)

func (x Ts005Version) Enum() *Ts005Version {
	p := new(Ts005Version)
	*p = x
	return p
}

func (x Ts005Version) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ts005Version) Descriptor() protoreflect.EnumDescriptor {
	return file_api_device_profile_proto_enumTypes[7].Descriptor()
}

func (Ts005Version) Type() protoreflect.EnumType {
	return &file_api_device_profile_proto_enumTypes[7]
}

func (x Ts005Version) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ts005Version.Descriptor instead.
func (Ts005Version) EnumDescriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{7}
}

type DeviceProfile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device-profile ID (UUID).
	// Note: on create this will be automatically generated.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Tenant ID (UUID).
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Description.
	Description string `protobuf:"bytes,26,opt,name=description,proto3" json:"description,omitempty"`
	// Region.
	Region common.Region `protobuf:"varint,4,opt,name=region,proto3,enum=common.Region" json:"region,omitempty"`
	// LoRaWAN mac-version.
	MacVersion common.MacVersion `protobuf:"varint,5,opt,name=mac_version,json=macVersion,proto3,enum=common.MacVersion" json:"mac_version,omitempty"`
	// Regional parameters revision.
	RegParamsRevision common.RegParamsRevision `protobuf:"varint,6,opt,name=reg_params_revision,json=regParamsRevision,proto3,enum=common.RegParamsRevision" json:"reg_params_revision,omitempty"`
	// ADR algorithm ID.
	AdrAlgorithmId string `protobuf:"bytes,7,opt,name=adr_algorithm_id,json=adrAlgorithmId,proto3" json:"adr_algorithm_id,omitempty"`
	// Payload codec runtime.
	PayloadCodecRuntime CodecRuntime `protobuf:"varint,8,opt,name=payload_codec_runtime,json=payloadCodecRuntime,proto3,enum=api.CodecRuntime" json:"payload_codec_runtime,omitempty"`
	// Payload codec script.
	PayloadCodecScript string `protobuf:"bytes,9,opt,name=payload_codec_script,json=payloadCodecScript,proto3" json:"payload_codec_script,omitempty"`
	// Flush queue on device activation.
	FlushQueueOnActivate bool `protobuf:"varint,10,opt,name=flush_queue_on_activate,json=flushQueueOnActivate,proto3" json:"flush_queue_on_activate,omitempty"`
	// Uplink interval (seconds).
	// This defines the expected uplink interval which the device uses for
	// communication. If the uplink interval has expired and no uplink has
	// been received, the device is considered inactive.
	UplinkInterval uint32 `protobuf:"varint,11,opt,name=uplink_interval,json=uplinkInterval,proto3" json:"uplink_interval,omitempty"`
	// Device-status request interval (times / day).
	// This defines the times per day that ChirpStack will request the
	// device-status from the device.
	DeviceStatusReqInterval uint32 `protobuf:"varint,12,opt,name=device_status_req_interval,json=deviceStatusReqInterval,proto3" json:"device_status_req_interval,omitempty"`
	// Supports OTAA.
	SupportsOtaa bool `protobuf:"varint,13,opt,name=supports_otaa,json=supportsOtaa,proto3" json:"supports_otaa,omitempty"`
	// Supports Class B.
	SupportsClassB bool `protobuf:"varint,14,opt,name=supports_class_b,json=supportsClassB,proto3" json:"supports_class_b,omitempty"`
	// Supports Class-C.
	SupportsClassC bool `protobuf:"varint,15,opt,name=supports_class_c,json=supportsClassC,proto3" json:"supports_class_c,omitempty"`
	// Class-B timeout (seconds).
	// This is the maximum time ChirpStack will wait to receive an acknowledgement
	// from the device (if requested).
	ClassBTimeout uint32 `protobuf:"varint,16,opt,name=class_b_timeout,json=classBTimeout,proto3" json:"class_b_timeout,omitempty"`
	// Class-B ping-slot periodicity.
	// Valid options are: 0 - 7.
	//
	// Number of ping-slots per beacon-period:
	// pingNb = 2^(7-periodicity)
	//
	// Periodicity: 0 = 128 ping-slots per beacon period = ~ every 1 sec
	// Periodicity: 7 = 1 ping-slot per beacon period = ~ every 128 sec
	ClassBPingSlotPeriodicity uint32 `protobuf:"varint,17,opt,name=class_b_ping_slot_periodicity,json=classBPingSlotPeriodicity,proto3" json:"class_b_ping_slot_periodicity,omitempty"`
	// Class-B ping-slot DR.
	ClassBPingSlotDr uint32 `protobuf:"varint,18,opt,name=class_b_ping_slot_dr,json=classBPingSlotDr,proto3" json:"class_b_ping_slot_dr,omitempty"`
	// Class-B ping-slot freq (Hz).
	ClassBPingSlotFreq uint32 `protobuf:"varint,19,opt,name=class_b_ping_slot_freq,json=classBPingSlotFreq,proto3" json:"class_b_ping_slot_freq,omitempty"`
	// Class-C timeout (seconds).
	// This is the maximum time ChirpStack will wait to receive an acknowledgement
	// from the device (if requested).
	ClassCTimeout uint32 `protobuf:"varint,20,opt,name=class_c_timeout,json=classCTimeout,proto3" json:"class_c_timeout,omitempty"`
	// RX1 delay (for ABP).
	AbpRx1Delay uint32 `protobuf:"varint,21,opt,name=abp_rx1_delay,json=abpRx1Delay,proto3" json:"abp_rx1_delay,omitempty"`
	// RX1 DR offset (for ABP).
	AbpRx1DrOffset uint32 `protobuf:"varint,22,opt,name=abp_rx1_dr_offset,json=abpRx1DrOffset,proto3" json:"abp_rx1_dr_offset,omitempty"`
	// RX2 DR (for ABP).
	AbpRx2Dr uint32 `protobuf:"varint,23,opt,name=abp_rx2_dr,json=abpRx2Dr,proto3" json:"abp_rx2_dr,omitempty"`
	// RX2 frequency (for ABP, Hz).
	AbpRx2Freq uint32 `protobuf:"varint,24,opt,name=abp_rx2_freq,json=abpRx2Freq,proto3" json:"abp_rx2_freq,omitempty"`
	// Tags (user defined).
	// These tags can be used to add additional information the the
	// device-profile. These tags are exposed in all the integration events of
	// devices using this device-profile.
	Tags map[string]string `protobuf:"bytes,25,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Measurements.
	// If defined, ChirpStack will visualize these metrics in the web-interface.
	Measurements map[string]*Measurement `protobuf:"bytes,27,rep,name=measurements,proto3" json:"measurements,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Auto-detect measurements.
	// If set to true, measurements will be automatically added based on the
	// keys of the decoded payload. In cases where the decoded payload contains
	// random keys in the data, you want to set this to false.
	AutoDetectMeasurements bool `protobuf:"varint,28,opt,name=auto_detect_measurements,json=autoDetectMeasurements,proto3" json:"auto_detect_measurements,omitempty"`
	// Region configuration ID.
	// If set, devices will only use the associated region. If let blank, then
	// devices will use all regions matching the selected common-name. Note
	// that multiple region configurations can exist for the same common-name,
	// e.g. to provide an 8 channel and 16 channel configuration for the US915
	// band.
	RegionConfigId string `protobuf:"bytes,29,opt,name=region_config_id,json=regionConfigId,proto3" json:"region_config_id,omitempty"`
	// Device is a Relay device.
	// Enable this in case the device is a Relay. A Relay device implements TS011
	// and is able to relay data from relay capable devices.
	// See for more information the TS011 specification.
	IsRelay bool `protobuf:"varint,30,opt,name=is_relay,json=isRelay,proto3" json:"is_relay,omitempty"`
	// Device is a Relay end-device.
	// Enable this in case the device is an end-device that can operate under a
	// Relay. Please refer to the TS011 specification for more information.
	IsRelayEd bool `protobuf:"varint,31,opt,name=is_relay_ed,json=isRelayEd,proto3" json:"is_relay_ed,omitempty"`
	// End-device only accept data through relay.
	// Only accept data for this device through a relay. This setting is useful
	// for testing as in case of a test-setup, the end-device is usually within
	// range of the gateway.
	RelayEdRelayOnly bool `protobuf:"varint,32,opt,name=relay_ed_relay_only,json=relayEdRelayOnly,proto3" json:"relay_ed_relay_only,omitempty"`
	// Relay must be enabled.
	RelayEnabled bool `protobuf:"varint,33,opt,name=relay_enabled,json=relayEnabled,proto3" json:"relay_enabled,omitempty"`
	// Relay CAD periodicity.
	RelayCadPeriodicity CadPeriodicity `protobuf:"varint,34,opt,name=relay_cad_periodicity,json=relayCadPeriodicity,proto3,enum=api.CadPeriodicity" json:"relay_cad_periodicity,omitempty"`
	// Relay default channel index.
	// Valid values are 0 and 1, please refer to the RP002 specification for
	// the meaning of these values.
	RelayDefaultChannelIndex uint32 `protobuf:"varint,35,opt,name=relay_default_channel_index,json=relayDefaultChannelIndex,proto3" json:"relay_default_channel_index,omitempty"`
	// Relay second channel frequency (Hz).
	RelaySecondChannelFreq uint32 `protobuf:"varint,36,opt,name=relay_second_channel_freq,json=relaySecondChannelFreq,proto3" json:"relay_second_channel_freq,omitempty"`
	// Relay second channel DR.
	RelaySecondChannelDr uint32 `protobuf:"varint,37,opt,name=relay_second_channel_dr,json=relaySecondChannelDr,proto3" json:"relay_second_channel_dr,omitempty"`
	// Relay second channel ACK offset.
	RelaySecondChannelAckOffset SecondChAckOffset `protobuf:"varint,38,opt,name=relay_second_channel_ack_offset,json=relaySecondChannelAckOffset,proto3,enum=api.SecondChAckOffset" json:"relay_second_channel_ack_offset,omitempty"`
	// Relay end-device activation mode.
	RelayEdActivationMode RelayModeActivation `protobuf:"varint,39,opt,name=relay_ed_activation_mode,json=relayEdActivationMode,proto3,enum=api.RelayModeActivation" json:"relay_ed_activation_mode,omitempty"`
	// Relay end-device smart-enable level.
	RelayEdSmartEnableLevel uint32 `protobuf:"varint,40,opt,name=relay_ed_smart_enable_level,json=relayEdSmartEnableLevel,proto3" json:"relay_ed_smart_enable_level,omitempty"`
	// Relay end-device back-off (in case it does not receive WOR ACK frame).
	// 0 = Always send a LoRaWAN uplink
	// 1..63 = Send a LoRaWAN uplink after X WOR frames without a WOR ACK
	RelayEdBackOff uint32 `protobuf:"varint,41,opt,name=relay_ed_back_off,json=relayEdBackOff,proto3" json:"relay_ed_back_off,omitempty"`
	// Relay end-device uplink limit bucket size.
	//
	// This field indicates the multiplier to determine the bucket size
	// according to the following formula:
	// BucketSize TOKEN = _reload_rate x _bucket_size
	//
	// Valid values (0 - 3):
	//
	//	0 = 1
	//	1 = 2
	//	2 = 4
	//	3 = 12
	RelayEdUplinkLimitBucketSize uint32 `protobuf:"varint,42,opt,name=relay_ed_uplink_limit_bucket_size,json=relayEdUplinkLimitBucketSize,proto3" json:"relay_ed_uplink_limit_bucket_size,omitempty"`
	// Relay end-device uplink limit reload rate.
	//
	// Valid values:
	//   - 0 - 62 = X tokens every hour
	//   - 63     = no limitation
	RelayEdUplinkLimitReloadRate uint32 `protobuf:"varint,43,opt,name=relay_ed_uplink_limit_reload_rate,json=relayEdUplinkLimitReloadRate,proto3" json:"relay_ed_uplink_limit_reload_rate,omitempty"`
	// Relay join-request limit reload rate.
	//
	// Valid values:
	//   - 0 - 126 = X tokens every hour
	//   - 127     = no limitation
	RelayJoinReqLimitReloadRate uint32 `protobuf:"varint,44,opt,name=relay_join_req_limit_reload_rate,json=relayJoinReqLimitReloadRate,proto3" json:"relay_join_req_limit_reload_rate,omitempty"`
	// Relay notify limit reload rate.
	//
	// Valid values:
	//   - 0 - 126 = X tokens every hour
	//   - 127     = no limitation
	RelayNotifyLimitReloadRate uint32 `protobuf:"varint,45,opt,name=relay_notify_limit_reload_rate,json=relayNotifyLimitReloadRate,proto3" json:"relay_notify_limit_reload_rate,omitempty"`
	// Relay global uplink limit reload rate.
	//
	// Valid values:
	//   - 0 - 126 = X tokens every hour
	//   - 127     = no limitation
	RelayGlobalUplinkLimitReloadRate uint32 `protobuf:"varint,46,opt,name=relay_global_uplink_limit_reload_rate,json=relayGlobalUplinkLimitReloadRate,proto3" json:"relay_global_uplink_limit_reload_rate,omitempty"`
	// Relay overall limit reload rate.
	//
	// Valid values:
	//   - 0 - 126 = X tokens every hour
	//   - 127     = no limitation
	RelayOverallLimitReloadRate uint32 `protobuf:"varint,47,opt,name=relay_overall_limit_reload_rate,json=relayOverallLimitReloadRate,proto3" json:"relay_overall_limit_reload_rate,omitempty"`
	// Relay join-request limit bucket size.
	//
	// This field indicates the multiplier to determine the bucket size
	// according to the following formula:
	// BucketSize TOKEN = _reload_rate x _bucket_size
	//
	// Valid values (0 - 3):
	//
	//	0 = 1
	//	1 = 2
	//	2 = 4
	//	3 = 12
	RelayJoinReqLimitBucketSize uint32 `protobuf:"varint,48,opt,name=relay_join_req_limit_bucket_size,json=relayJoinReqLimitBucketSize,proto3" json:"relay_join_req_limit_bucket_size,omitempty"`
	// Relay notify limit bucket size.
	//
	// This field indicates the multiplier to determine the bucket size
	// according to the following formula:
	// BucketSize TOKEN = _reload_rate x _bucket_size
	//
	// Valid values (0 - 3):
	//
	//	0 = 1
	//	1 = 2
	//	2 = 4
	//	3 = 12
	RelayNotifyLimitBucketSize uint32 `protobuf:"varint,49,opt,name=relay_notify_limit_bucket_size,json=relayNotifyLimitBucketSize,proto3" json:"relay_notify_limit_bucket_size,omitempty"`
	// Relay globak uplink limit bucket size.
	//
	// This field indicates the multiplier to determine the bucket size
	// according to the following formula:
	// BucketSize TOKEN = _reload_rate x _bucket_size
	//
	// Valid values (0 - 3):
	//
	//	0 = 1
	//	1 = 2
	//	2 = 4
	//	3 = 12
	RelayGlobalUplinkLimitBucketSize uint32 `protobuf:"varint,50,opt,name=relay_global_uplink_limit_bucket_size,json=relayGlobalUplinkLimitBucketSize,proto3" json:"relay_global_uplink_limit_bucket_size,omitempty"`
	// Relay overall limit bucket size.
	//
	// This field indicates the multiplier to determine the bucket size
	// according to the following formula:
	// BucketSize TOKEN = _reload_rate x _bucket_size
	//
	// Valid values (0 - 3):
	//
	//	0 = 1
	//	1 = 2
	//	2 = 4
	//	3 = 12
	RelayOverallLimitBucketSize uint32 `protobuf:"varint,51,opt,name=relay_overall_limit_bucket_size,json=relayOverallLimitBucketSize,proto3" json:"relay_overall_limit_bucket_size,omitempty"`
	// Allow roaming.
	//
	// If set to true, it means that the device is allowed to use roaming.
	AllowRoaming bool `protobuf:"varint,52,opt,name=allow_roaming,json=allowRoaming,proto3" json:"allow_roaming,omitempty"`
	// RX1 Delay.
	//
	// This makes it possible to override the system RX1 Delay. Please note that
	// this values only has effect in case it is higher than the system value.
	// In other words, it can be used to increase the RX1 Delay but not to decrease
	// it.
	// Valid options are 1 - 15 (0 = always use system RX1 Delay).
	Rx1Delay uint32 `protobuf:"varint,53,opt,name=rx1_delay,json=rx1Delay,proto3" json:"rx1_delay,omitempty"`
	// Application Layer parameters.
	AppLayerParams *AppLayerParams `protobuf:"bytes,54,opt,name=app_layer_params,json=appLayerParams,proto3" json:"app_layer_params,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeviceProfile) Reset() {
	*x = DeviceProfile{}
	mi := &file_api_device_profile_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceProfile) ProtoMessage() {}

func (x *DeviceProfile) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceProfile.ProtoReflect.Descriptor instead.
func (*DeviceProfile) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceProfile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceProfile) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeviceProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceProfile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DeviceProfile) GetRegion() common.Region {
	if x != nil {
		return x.Region
	}
	return common.Region(0)
}

func (x *DeviceProfile) GetMacVersion() common.MacVersion {
	if x != nil {
		return x.MacVersion
	}
	return common.MacVersion(0)
}

func (x *DeviceProfile) GetRegParamsRevision() common.RegParamsRevision {
	if x != nil {
		return x.RegParamsRevision
	}
	return common.RegParamsRevision(0)
}

func (x *DeviceProfile) GetAdrAlgorithmId() string {
	if x != nil {
		return x.AdrAlgorithmId
	}
	return ""
}

func (x *DeviceProfile) GetPayloadCodecRuntime() CodecRuntime {
	if x != nil {
		return x.PayloadCodecRuntime
	}
	return CodecRuntime_NONE
}

func (x *DeviceProfile) GetPayloadCodecScript() string {
	if x != nil {
		return x.PayloadCodecScript
	}
	return ""
}

func (x *DeviceProfile) GetFlushQueueOnActivate() bool {
	if x != nil {
		return x.FlushQueueOnActivate
	}
	return false
}

func (x *DeviceProfile) GetUplinkInterval() uint32 {
	if x != nil {
		return x.UplinkInterval
	}
	return 0
}

func (x *DeviceProfile) GetDeviceStatusReqInterval() uint32 {
	if x != nil {
		return x.DeviceStatusReqInterval
	}
	return 0
}

func (x *DeviceProfile) GetSupportsOtaa() bool {
	if x != nil {
		return x.SupportsOtaa
	}
	return false
}

func (x *DeviceProfile) GetSupportsClassB() bool {
	if x != nil {
		return x.SupportsClassB
	}
	return false
}

func (x *DeviceProfile) GetSupportsClassC() bool {
	if x != nil {
		return x.SupportsClassC
	}
	return false
}

func (x *DeviceProfile) GetClassBTimeout() uint32 {
	if x != nil {
		return x.ClassBTimeout
	}
	return 0
}

func (x *DeviceProfile) GetClassBPingSlotPeriodicity() uint32 {
	if x != nil {
		return x.ClassBPingSlotPeriodicity
	}
	return 0
}

func (x *DeviceProfile) GetClassBPingSlotDr() uint32 {
	if x != nil {
		return x.ClassBPingSlotDr
	}
	return 0
}

func (x *DeviceProfile) GetClassBPingSlotFreq() uint32 {
	if x != nil {
		return x.ClassBPingSlotFreq
	}
	return 0
}

func (x *DeviceProfile) GetClassCTimeout() uint32 {
	if x != nil {
		return x.ClassCTimeout
	}
	return 0
}

func (x *DeviceProfile) GetAbpRx1Delay() uint32 {
	if x != nil {
		return x.AbpRx1Delay
	}
	return 0
}

func (x *DeviceProfile) GetAbpRx1DrOffset() uint32 {
	if x != nil {
		return x.AbpRx1DrOffset
	}
	return 0
}

func (x *DeviceProfile) GetAbpRx2Dr() uint32 {
	if x != nil {
		return x.AbpRx2Dr
	}
	return 0
}

func (x *DeviceProfile) GetAbpRx2Freq() uint32 {
	if x != nil {
		return x.AbpRx2Freq
	}
	return 0
}

func (x *DeviceProfile) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DeviceProfile) GetMeasurements() map[string]*Measurement {
	if x != nil {
		return x.Measurements
	}
	return nil
}

func (x *DeviceProfile) GetAutoDetectMeasurements() bool {
	if x != nil {
		return x.AutoDetectMeasurements
	}
	return false
}

func (x *DeviceProfile) GetRegionConfigId() string {
	if x != nil {
		return x.RegionConfigId
	}
	return ""
}

func (x *DeviceProfile) GetIsRelay() bool {
	if x != nil {
		return x.IsRelay
	}
	return false
}

func (x *DeviceProfile) GetIsRelayEd() bool {
	if x != nil {
		return x.IsRelayEd
	}
	return false
}

func (x *DeviceProfile) GetRelayEdRelayOnly() bool {
	if x != nil {
		return x.RelayEdRelayOnly
	}
	return false
}

func (x *DeviceProfile) GetRelayEnabled() bool {
	if x != nil {
		return x.RelayEnabled
	}
	return false
}

func (x *DeviceProfile) GetRelayCadPeriodicity() CadPeriodicity {
	if x != nil {
		return x.RelayCadPeriodicity
	}
	return CadPeriodicity_SEC_1
}

func (x *DeviceProfile) GetRelayDefaultChannelIndex() uint32 {
	if x != nil {
		return x.RelayDefaultChannelIndex
	}
	return 0
}

func (x *DeviceProfile) GetRelaySecondChannelFreq() uint32 {
	if x != nil {
		return x.RelaySecondChannelFreq
	}
	return 0
}

func (x *DeviceProfile) GetRelaySecondChannelDr() uint32 {
	if x != nil {
		return x.RelaySecondChannelDr
	}
	return 0
}

func (x *DeviceProfile) GetRelaySecondChannelAckOffset() SecondChAckOffset {
	if x != nil {
		return x.RelaySecondChannelAckOffset
	}
	return SecondChAckOffset_KHZ_0
}

func (x *DeviceProfile) GetRelayEdActivationMode() RelayModeActivation {
	if x != nil {
		return x.RelayEdActivationMode
	}
	return RelayModeActivation_DISABLE_RELAY_MODE
}

func (x *DeviceProfile) GetRelayEdSmartEnableLevel() uint32 {
	if x != nil {
		return x.RelayEdSmartEnableLevel
	}
	return 0
}

func (x *DeviceProfile) GetRelayEdBackOff() uint32 {
	if x != nil {
		return x.RelayEdBackOff
	}
	return 0
}

func (x *DeviceProfile) GetRelayEdUplinkLimitBucketSize() uint32 {
	if x != nil {
		return x.RelayEdUplinkLimitBucketSize
	}
	return 0
}

func (x *DeviceProfile) GetRelayEdUplinkLimitReloadRate() uint32 {
	if x != nil {
		return x.RelayEdUplinkLimitReloadRate
	}
	return 0
}

func (x *DeviceProfile) GetRelayJoinReqLimitReloadRate() uint32 {
	if x != nil {
		return x.RelayJoinReqLimitReloadRate
	}
	return 0
}

func (x *DeviceProfile) GetRelayNotifyLimitReloadRate() uint32 {
	if x != nil {
		return x.RelayNotifyLimitReloadRate
	}
	return 0
}

func (x *DeviceProfile) GetRelayGlobalUplinkLimitReloadRate() uint32 {
	if x != nil {
		return x.RelayGlobalUplinkLimitReloadRate
	}
	return 0
}

func (x *DeviceProfile) GetRelayOverallLimitReloadRate() uint32 {
	if x != nil {
		return x.RelayOverallLimitReloadRate
	}
	return 0
}

func (x *DeviceProfile) GetRelayJoinReqLimitBucketSize() uint32 {
	if x != nil {
		return x.RelayJoinReqLimitBucketSize
	}
	return 0
}

func (x *DeviceProfile) GetRelayNotifyLimitBucketSize() uint32 {
	if x != nil {
		return x.RelayNotifyLimitBucketSize
	}
	return 0
}

func (x *DeviceProfile) GetRelayGlobalUplinkLimitBucketSize() uint32 {
	if x != nil {
		return x.RelayGlobalUplinkLimitBucketSize
	}
	return 0
}

func (x *DeviceProfile) GetRelayOverallLimitBucketSize() uint32 {
	if x != nil {
		return x.RelayOverallLimitBucketSize
	}
	return 0
}

func (x *DeviceProfile) GetAllowRoaming() bool {
	if x != nil {
		return x.AllowRoaming
	}
	return false
}

func (x *DeviceProfile) GetRx1Delay() uint32 {
	if x != nil {
		return x.Rx1Delay
	}
	return 0
}

func (x *DeviceProfile) GetAppLayerParams() *AppLayerParams {
	if x != nil {
		return x.AppLayerParams
	}
	return nil
}

type Measurement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name (user defined).
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Kind.
	Kind          MeasurementKind `protobuf:"varint,3,opt,name=kind,proto3,enum=api.MeasurementKind" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Measurement) Reset() {
	*x = Measurement{}
	mi := &file_api_device_profile_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Measurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Measurement) ProtoMessage() {}

func (x *Measurement) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Measurement.ProtoReflect.Descriptor instead.
func (*Measurement) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{1}
}

func (x *Measurement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Measurement) GetKind() MeasurementKind {
	if x != nil {
		return x.Kind
	}
	return MeasurementKind_UNKNOWN
}

type AppLayerParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TS003 version (Application Layer Clock Sync).
	Ts003Version Ts003Version `protobuf:"varint,1,opt,name=ts003_version,json=ts003Version,proto3,enum=api.Ts003Version" json:"ts003_version,omitempty"`
	// TS003 fPort.
	Ts003FPort uint32 `protobuf:"varint,2,opt,name=ts003_f_port,json=ts003FPort,proto3" json:"ts003_f_port,omitempty"`
	// TS004 version (Fragmented Data Block Transport).
	Ts004Version Ts004Version `protobuf:"varint,3,opt,name=ts004_version,json=ts004Version,proto3,enum=api.Ts004Version" json:"ts004_version,omitempty"`
	// TS004 fPort.
	Ts004FPort uint32 `protobuf:"varint,4,opt,name=ts004_f_port,json=ts004FPort,proto3" json:"ts004_f_port,omitempty"`
	// TS005 version (Remote Multicast Setup).
	Ts005Version Ts005Version `protobuf:"varint,5,opt,name=ts005_version,json=ts005Version,proto3,enum=api.Ts005Version" json:"ts005_version,omitempty"`
	// TS005 fPort.
	Ts005FPort    uint32 `protobuf:"varint,6,opt,name=ts005_f_port,json=ts005FPort,proto3" json:"ts005_f_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppLayerParams) Reset() {
	*x = AppLayerParams{}
	mi := &file_api_device_profile_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppLayerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLayerParams) ProtoMessage() {}

func (x *AppLayerParams) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLayerParams.ProtoReflect.Descriptor instead.
func (*AppLayerParams) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{2}
}

func (x *AppLayerParams) GetTs003Version() Ts003Version {
	if x != nil {
		return x.Ts003Version
	}
	return Ts003Version_TS003_NOT_IMPLEMENTED
}

func (x *AppLayerParams) GetTs003FPort() uint32 {
	if x != nil {
		return x.Ts003FPort
	}
	return 0
}

func (x *AppLayerParams) GetTs004Version() Ts004Version {
	if x != nil {
		return x.Ts004Version
	}
	return Ts004Version_TS004_NOT_IMPLEMENTED
}

func (x *AppLayerParams) GetTs004FPort() uint32 {
	if x != nil {
		return x.Ts004FPort
	}
	return 0
}

func (x *AppLayerParams) GetTs005Version() Ts005Version {
	if x != nil {
		return x.Ts005Version
	}
	return Ts005Version_TS005_NOT_IMPLEMENTED
}

func (x *AppLayerParams) GetTs005FPort() uint32 {
	if x != nil {
		return x.Ts005FPort
	}
	return 0
}

type DeviceProfileListItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device-profile ID (UUID).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Name.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Region.
	Region common.Region `protobuf:"varint,5,opt,name=region,proto3,enum=common.Region" json:"region,omitempty"`
	// LoRaWAN mac-version.
	MacVersion common.MacVersion `protobuf:"varint,6,opt,name=mac_version,json=macVersion,proto3,enum=common.MacVersion" json:"mac_version,omitempty"`
	// Regional parameters revision.
	RegParamsRevision common.RegParamsRevision `protobuf:"varint,7,opt,name=reg_params_revision,json=regParamsRevision,proto3,enum=common.RegParamsRevision" json:"reg_params_revision,omitempty"`
	// Supports OTAA.
	SupportsOtaa bool `protobuf:"varint,8,opt,name=supports_otaa,json=supportsOtaa,proto3" json:"supports_otaa,omitempty"`
	// Supports Class-B.
	SupportsClassB bool `protobuf:"varint,9,opt,name=supports_class_b,json=supportsClassB,proto3" json:"supports_class_b,omitempty"`
	// Supports Class-C.
	SupportsClassC bool `protobuf:"varint,10,opt,name=supports_class_c,json=supportsClassC,proto3" json:"supports_class_c,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeviceProfileListItem) Reset() {
	*x = DeviceProfileListItem{}
	mi := &file_api_device_profile_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceProfileListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceProfileListItem) ProtoMessage() {}

func (x *DeviceProfileListItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceProfileListItem.ProtoReflect.Descriptor instead.
func (*DeviceProfileListItem) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceProfileListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceProfileListItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeviceProfileListItem) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DeviceProfileListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceProfileListItem) GetRegion() common.Region {
	if x != nil {
		return x.Region
	}
	return common.Region(0)
}

func (x *DeviceProfileListItem) GetMacVersion() common.MacVersion {
	if x != nil {
		return x.MacVersion
	}
	return common.MacVersion(0)
}

func (x *DeviceProfileListItem) GetRegParamsRevision() common.RegParamsRevision {
	if x != nil {
		return x.RegParamsRevision
	}
	return common.RegParamsRevision(0)
}

func (x *DeviceProfileListItem) GetSupportsOtaa() bool {
	if x != nil {
		return x.SupportsOtaa
	}
	return false
}

func (x *DeviceProfileListItem) GetSupportsClassB() bool {
	if x != nil {
		return x.SupportsClassB
	}
	return false
}

func (x *DeviceProfileListItem) GetSupportsClassC() bool {
	if x != nil {
		return x.SupportsClassC
	}
	return false
}

type CreateDeviceProfileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Object to create.
	DeviceProfile *DeviceProfile `protobuf:"bytes,1,opt,name=device_profile,json=deviceProfile,proto3" json:"device_profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDeviceProfileRequest) Reset() {
	*x = CreateDeviceProfileRequest{}
	mi := &file_api_device_profile_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceProfileRequest) ProtoMessage() {}

func (x *CreateDeviceProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceProfileRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDeviceProfileRequest) GetDeviceProfile() *DeviceProfile {
	if x != nil {
		return x.DeviceProfile
	}
	return nil
}

type CreateDeviceProfileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID (UUID).
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDeviceProfileResponse) Reset() {
	*x = CreateDeviceProfileResponse{}
	mi := &file_api_device_profile_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceProfileResponse) ProtoMessage() {}

func (x *CreateDeviceProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceProfileResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceProfileResponse) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDeviceProfileResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeviceProfileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID (UUID).
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceProfileRequest) Reset() {
	*x = GetDeviceProfileRequest{}
	mi := &file_api_device_profile_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceProfileRequest) ProtoMessage() {}

func (x *GetDeviceProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceProfileRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{6}
}

func (x *GetDeviceProfileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeviceProfileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device-profile object.
	DeviceProfile *DeviceProfile `protobuf:"bytes,1,opt,name=device_profile,json=deviceProfile,proto3" json:"device_profile,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceProfileResponse) Reset() {
	*x = GetDeviceProfileResponse{}
	mi := &file_api_device_profile_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceProfileResponse) ProtoMessage() {}

func (x *GetDeviceProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceProfileResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceProfileResponse) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{7}
}

func (x *GetDeviceProfileResponse) GetDeviceProfile() *DeviceProfile {
	if x != nil {
		return x.DeviceProfile
	}
	return nil
}

func (x *GetDeviceProfileResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetDeviceProfileResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UpdateDeviceProfileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device-profile object.
	DeviceProfile *DeviceProfile `protobuf:"bytes,1,opt,name=device_profile,json=deviceProfile,proto3" json:"device_profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeviceProfileRequest) Reset() {
	*x = UpdateDeviceProfileRequest{}
	mi := &file_api_device_profile_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeviceProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceProfileRequest) ProtoMessage() {}

func (x *UpdateDeviceProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateDeviceProfileRequest) GetDeviceProfile() *DeviceProfile {
	if x != nil {
		return x.DeviceProfile
	}
	return nil
}

type DeleteDeviceProfileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID (UUID).
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDeviceProfileRequest) Reset() {
	*x = DeleteDeviceProfileRequest{}
	mi := &file_api_device_profile_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceProfileRequest) ProtoMessage() {}

func (x *DeleteDeviceProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceProfileRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceProfileRequest) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteDeviceProfileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListDeviceProfilesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Max number of device-profiles to return in the result-set.
	// If not set, it will be treated as 0, and the response will only return the total_count.
	Limit uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// If set, the given string will be used to search on name.
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	// Tenant ID to list the device-profiles for.
	TenantId      string `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeviceProfilesRequest) Reset() {
	*x = ListDeviceProfilesRequest{}
	mi := &file_api_device_profile_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeviceProfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceProfilesRequest) ProtoMessage() {}

func (x *ListDeviceProfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceProfilesRequest.ProtoReflect.Descriptor instead.
func (*ListDeviceProfilesRequest) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{10}
}

func (x *ListDeviceProfilesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDeviceProfilesRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListDeviceProfilesRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListDeviceProfilesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ListDeviceProfilesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of device-profiles.
	TotalCount uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Result-set.
	Result        []*DeviceProfileListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeviceProfilesResponse) Reset() {
	*x = ListDeviceProfilesResponse{}
	mi := &file_api_device_profile_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeviceProfilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceProfilesResponse) ProtoMessage() {}

func (x *ListDeviceProfilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceProfilesResponse.ProtoReflect.Descriptor instead.
func (*ListDeviceProfilesResponse) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{11}
}

func (x *ListDeviceProfilesResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListDeviceProfilesResponse) GetResult() []*DeviceProfileListItem {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListDeviceProfileAdrAlgorithmsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of algorithms.
	TotalCount uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Result-set.
	Result        []*AdrAlgorithmListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeviceProfileAdrAlgorithmsResponse) Reset() {
	*x = ListDeviceProfileAdrAlgorithmsResponse{}
	mi := &file_api_device_profile_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeviceProfileAdrAlgorithmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceProfileAdrAlgorithmsResponse) ProtoMessage() {}

func (x *ListDeviceProfileAdrAlgorithmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceProfileAdrAlgorithmsResponse.ProtoReflect.Descriptor instead.
func (*ListDeviceProfileAdrAlgorithmsResponse) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{12}
}

func (x *ListDeviceProfileAdrAlgorithmsResponse) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListDeviceProfileAdrAlgorithmsResponse) GetResult() []*AdrAlgorithmListItem {
	if x != nil {
		return x.Result
	}
	return nil
}

type AdrAlgorithmListItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Algorithm ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Algorithm name.
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdrAlgorithmListItem) Reset() {
	*x = AdrAlgorithmListItem{}
	mi := &file_api_device_profile_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdrAlgorithmListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdrAlgorithmListItem) ProtoMessage() {}

func (x *AdrAlgorithmListItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_device_profile_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdrAlgorithmListItem.ProtoReflect.Descriptor instead.
func (*AdrAlgorithmListItem) Descriptor() ([]byte, []int) {
	return file_api_device_profile_proto_rawDescGZIP(), []int{13}
}

func (x *AdrAlgorithmListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdrAlgorithmListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_api_device_profile_proto protoreflect.FileDescriptor

const file_api_device_profile_proto_rawDesc = "" +
	"\n" +
	"\x18api/device_profile.proto\x12\x03api\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x13common/common.proto\"\xbe\x17\n" +
	"\rDeviceProfile\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x1a \x01(\tR\vdescription\x12&\n" +
	"\x06region\x18\x04 \x01(\x0e2\x0e.common.RegionR\x06region\x123\n" +
	"\vmac_version\x18\x05 \x01(\x0e2\x12.common.MacVersionR\n" +
	"macVersion\x12I\n" +
	"\x13reg_params_revision\x18\x06 \x01(\x0e2\x19.common.RegParamsRevisionR\x11regParamsRevision\x12(\n" +
	"\x10adr_algorithm_id\x18\a \x01(\tR\x0eadrAlgorithmId\x12E\n" +
	"\x15payload_codec_runtime\x18\b \x01(\x0e2\x11.api.CodecRuntimeR\x13payloadCodecRuntime\x120\n" +
	"\x14payload_codec_script\x18\t \x01(\tR\x12payloadCodecScript\x125\n" +
	"\x17flush_queue_on_activate\x18\n" +
	" \x01(\bR\x14flushQueueOnActivate\x12'\n" +
	"\x0fuplink_interval\x18\v \x01(\rR\x0euplinkInterval\x12;\n" +
	"\x1adevice_status_req_interval\x18\f \x01(\rR\x17deviceStatusReqInterval\x12#\n" +
	"\rsupports_otaa\x18\r \x01(\bR\fsupportsOtaa\x12(\n" +
	"\x10supports_class_b\x18\x0e \x01(\bR\x0esupportsClassB\x12(\n" +
	"\x10supports_class_c\x18\x0f \x01(\bR\x0esupportsClassC\x12&\n" +
	"\x0fclass_b_timeout\x18\x10 \x01(\rR\rclassBTimeout\x12@\n" +
	"\x1dclass_b_ping_slot_periodicity\x18\x11 \x01(\rR\x19classBPingSlotPeriodicity\x12.\n" +
	"\x14class_b_ping_slot_dr\x18\x12 \x01(\rR\x10classBPingSlotDr\x122\n" +
	"\x16class_b_ping_slot_freq\x18\x13 \x01(\rR\x12classBPingSlotFreq\x12&\n" +
	"\x0fclass_c_timeout\x18\x14 \x01(\rR\rclassCTimeout\x12\"\n" +
	"\rabp_rx1_delay\x18\x15 \x01(\rR\vabpRx1Delay\x12)\n" +
	"\x11abp_rx1_dr_offset\x18\x16 \x01(\rR\x0eabpRx1DrOffset\x12\x1c\n" +
	"\n" +
	"abp_rx2_dr\x18\x17 \x01(\rR\babpRx2Dr\x12 \n" +
	"\fabp_rx2_freq\x18\x18 \x01(\rR\n" +
	"abpRx2Freq\x120\n" +
	"\x04tags\x18\x19 \x03(\v2\x1c.api.DeviceProfile.TagsEntryR\x04tags\x12H\n" +
	"\fmeasurements\x18\x1b \x03(\v2$.api.DeviceProfile.MeasurementsEntryR\fmeasurements\x128\n" +
	"\x18auto_detect_measurements\x18\x1c \x01(\bR\x16autoDetectMeasurements\x12(\n" +
	"\x10region_config_id\x18\x1d \x01(\tR\x0eregionConfigId\x12\x19\n" +
	"\bis_relay\x18\x1e \x01(\bR\aisRelay\x12\x1e\n" +
	"\vis_relay_ed\x18\x1f \x01(\bR\tisRelayEd\x12-\n" +
	"\x13relay_ed_relay_only\x18  \x01(\bR\x10relayEdRelayOnly\x12#\n" +
	"\rrelay_enabled\x18! \x01(\bR\frelayEnabled\x12G\n" +
	"\x15relay_cad_periodicity\x18\" \x01(\x0e2\x13.api.CadPeriodicityR\x13relayCadPeriodicity\x12=\n" +
	"\x1brelay_default_channel_index\x18# \x01(\rR\x18relayDefaultChannelIndex\x129\n" +
	"\x19relay_second_channel_freq\x18$ \x01(\rR\x16relaySecondChannelFreq\x125\n" +
	"\x17relay_second_channel_dr\x18% \x01(\rR\x14relaySecondChannelDr\x12\\\n" +
	"\x1frelay_second_channel_ack_offset\x18& \x01(\x0e2\x16.api.SecondChAckOffsetR\x1brelaySecondChannelAckOffset\x12Q\n" +
	"\x18relay_ed_activation_mode\x18' \x01(\x0e2\x18.api.RelayModeActivationR\x15relayEdActivationMode\x12<\n" +
	"\x1brelay_ed_smart_enable_level\x18( \x01(\rR\x17relayEdSmartEnableLevel\x12)\n" +
	"\x11relay_ed_back_off\x18) \x01(\rR\x0erelayEdBackOff\x12G\n" +
	"!relay_ed_uplink_limit_bucket_size\x18* \x01(\rR\x1crelayEdUplinkLimitBucketSize\x12G\n" +
	"!relay_ed_uplink_limit_reload_rate\x18+ \x01(\rR\x1crelayEdUplinkLimitReloadRate\x12E\n" +
	" relay_join_req_limit_reload_rate\x18, \x01(\rR\x1brelayJoinReqLimitReloadRate\x12B\n" +
	"\x1erelay_notify_limit_reload_rate\x18- \x01(\rR\x1arelayNotifyLimitReloadRate\x12O\n" +
	"%relay_global_uplink_limit_reload_rate\x18. \x01(\rR relayGlobalUplinkLimitReloadRate\x12D\n" +
	"\x1frelay_overall_limit_reload_rate\x18/ \x01(\rR\x1brelayOverallLimitReloadRate\x12E\n" +
	" relay_join_req_limit_bucket_size\x180 \x01(\rR\x1brelayJoinReqLimitBucketSize\x12B\n" +
	"\x1erelay_notify_limit_bucket_size\x181 \x01(\rR\x1arelayNotifyLimitBucketSize\x12O\n" +
	"%relay_global_uplink_limit_bucket_size\x182 \x01(\rR relayGlobalUplinkLimitBucketSize\x12D\n" +
	"\x1frelay_overall_limit_bucket_size\x183 \x01(\rR\x1brelayOverallLimitBucketSize\x12#\n" +
	"\rallow_roaming\x184 \x01(\bR\fallowRoaming\x12\x1b\n" +
	"\trx1_delay\x185 \x01(\rR\brx1Delay\x12=\n" +
	"\x10app_layer_params\x186 \x01(\v2\x13.api.AppLayerParamsR\x0eappLayerParams\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aQ\n" +
	"\x11MeasurementsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.api.MeasurementR\x05value:\x028\x01\"K\n" +
	"\vMeasurement\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12(\n" +
	"\x04kind\x18\x03 \x01(\x0e2\x14.api.MeasurementKindR\x04kind\"\x9e\x02\n" +
	"\x0eAppLayerParams\x126\n" +
	"\rts003_version\x18\x01 \x01(\x0e2\x11.api.Ts003VersionR\fts003Version\x12 \n" +
	"\fts003_f_port\x18\x02 \x01(\rR\n" +
	"ts003FPort\x126\n" +
	"\rts004_version\x18\x03 \x01(\x0e2\x11.api.Ts004VersionR\fts004Version\x12 \n" +
	"\fts004_f_port\x18\x04 \x01(\rR\n" +
	"ts004FPort\x126\n" +
	"\rts005_version\x18\x05 \x01(\x0e2\x11.api.Ts005VersionR\fts005Version\x12 \n" +
	"\fts005_f_port\x18\x06 \x01(\rR\n" +
	"ts005FPort\"\xd2\x03\n" +
	"\x15DeviceProfileListItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12&\n" +
	"\x06region\x18\x05 \x01(\x0e2\x0e.common.RegionR\x06region\x123\n" +
	"\vmac_version\x18\x06 \x01(\x0e2\x12.common.MacVersionR\n" +
	"macVersion\x12I\n" +
	"\x13reg_params_revision\x18\a \x01(\x0e2\x19.common.RegParamsRevisionR\x11regParamsRevision\x12#\n" +
	"\rsupports_otaa\x18\b \x01(\bR\fsupportsOtaa\x12(\n" +
	"\x10supports_class_b\x18\t \x01(\bR\x0esupportsClassB\x12(\n" +
	"\x10supports_class_c\x18\n" +
	" \x01(\bR\x0esupportsClassC\"W\n" +
	"\x1aCreateDeviceProfileRequest\x129\n" +
	"\x0edevice_profile\x18\x01 \x01(\v2\x12.api.DeviceProfileR\rdeviceProfile\"-\n" +
	"\x1bCreateDeviceProfileResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\")\n" +
	"\x17GetDeviceProfileRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xcb\x01\n" +
	"\x18GetDeviceProfileResponse\x129\n" +
	"\x0edevice_profile\x18\x01 \x01(\v2\x12.api.DeviceProfileR\rdeviceProfile\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"W\n" +
	"\x1aUpdateDeviceProfileRequest\x129\n" +
	"\x0edevice_profile\x18\x01 \x01(\v2\x12.api.DeviceProfileR\rdeviceProfile\",\n" +
	"\x1aDeleteDeviceProfileRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"~\n" +
	"\x19ListDeviceProfilesRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\rR\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\rR\x06offset\x12\x16\n" +
	"\x06search\x18\x03 \x01(\tR\x06search\x12\x1b\n" +
	"\ttenant_id\x18\x04 \x01(\tR\btenantId\"q\n" +
	"\x1aListDeviceProfilesResponse\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\rR\n" +
	"totalCount\x122\n" +
	"\x06result\x18\x02 \x03(\v2\x1a.api.DeviceProfileListItemR\x06result\"|\n" +
	"&ListDeviceProfileAdrAlgorithmsResponse\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\rR\n" +
	"totalCount\x121\n" +
	"\x06result\x18\x02 \x03(\v2\x19.api.AdrAlgorithmListItemR\x06result\":\n" +
	"\x14AdrAlgorithmListItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name*1\n" +
	"\fCodecRuntime\x12\b\n" +
	"\x04NONE\x10\x00\x12\x0f\n" +
	"\vCAYENNE_LPP\x10\x01\x12\x06\n" +
	"\x02JS\x10\x02*P\n" +
	"\x0fMeasurementKind\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aCOUNTER\x10\x01\x12\f\n" +
	"\bABSOLUTE\x10\x02\x12\t\n" +
	"\x05GAUGE\x10\x03\x12\n" +
	"\n" +
	"\x06STRING\x10\x04*U\n" +
	"\x0eCadPeriodicity\x12\t\n" +
	"\x05SEC_1\x10\x00\x12\n" +
	"\n" +
	"\x06MS_500\x10\x01\x12\n" +
	"\n" +
	"\x06MS_250\x10\x02\x12\n" +
	"\n" +
	"\x06MS_100\x10\x03\x12\t\n" +
	"\x05MS_50\x10\x04\x12\t\n" +
	"\x05MS_20\x10\x05*a\n" +
	"\x11SecondChAckOffset\x12\t\n" +
	"\x05KHZ_0\x10\x00\x12\v\n" +
	"\aKHZ_200\x10\x01\x12\v\n" +
	"\aKHZ_400\x10\x02\x12\v\n" +
	"\aKHZ_800\x10\x03\x12\f\n" +
	"\bKHZ_1600\x10\x04\x12\f\n" +
	"\bKHZ_3200\x10\x05*l\n" +
	"\x13RelayModeActivation\x12\x16\n" +
	"\x12DISABLE_RELAY_MODE\x10\x00\x12\x15\n" +
	"\x11ENABLE_RELAY_MODE\x10\x01\x12\v\n" +
	"\aDYNAMIC\x10\x02\x12\x19\n" +
	"\x15END_DEVICE_CONTROLLED\x10\x03*I\n" +
	"\fTs003Version\x12\x19\n" +
	"\x15TS003_NOT_IMPLEMENTED\x10\x00\x12\x0e\n" +
	"\n" +
	"TS003_V100\x10\x01\x12\x0e\n" +
	"\n" +
	"TS003_v200\x10\x02*I\n" +
	"\fTs004Version\x12\x19\n" +
	"\x15TS004_NOT_IMPLEMENTED\x10\x00\x12\x0e\n" +
	"\n" +
	"TS004_V100\x10\x01\x12\x0e\n" +
	"\n" +
	"TS004_V200\x10\x02*I\n" +
	"\fTs005Version\x12\x19\n" +
	"\x15TS005_NOT_IMPLEMENTED\x10\x00\x12\x0e\n" +
	"\n" +
	"TS005_V100\x10\x01\x12\x0e\n" +
	"\n" +
	"TS005_V200\x10\x022\xb8\x05\n" +
	"\x14DeviceProfileService\x12l\n" +
	"\x06Create\x12\x1f.api.CreateDeviceProfileRequest\x1a .api.CreateDeviceProfileResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/api/device-profiles\x12e\n" +
	"\x03Get\x12\x1c.api.GetDeviceProfileRequest\x1a\x1d.api.GetDeviceProfileResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/api/device-profiles/{id}\x12v\n" +
	"\x06Update\x12\x1f.api.UpdateDeviceProfileRequest\x1a\x16.google.protobuf.Empty\"3\x82\xd3\xe4\x93\x02-:\x01*\x1a(/api/device-profiles/{device_profile.id}\x12d\n" +
	"\x06Delete\x12\x1f.api.DeleteDeviceProfileRequest\x1a\x16.google.protobuf.Empty\"!\x82\xd3\xe4\x93\x02\x1b*\x19/api/device-profiles/{id}\x12e\n" +
	"\x04List\x12\x1e.api.ListDeviceProfilesRequest\x1a\x1f.api.ListDeviceProfilesResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/api/device-profiles\x12\x85\x01\n" +
	"\x11ListAdrAlgorithms\x12\x16.google.protobuf.Empty\x1a+.api.ListDeviceProfileAdrAlgorithmsResponse\"+\x82\xd3\xe4\x93\x02%\x12#/api/device-profiles/adr-algorithmsB\x98\x01\n" +
	"\x11io.chirpstack.apiB\x12DeviceProfileProtoP\x01Z.github.com/chirpstack/chirpstack/api/go/v4/api\xaa\x02\x0eChirpstack.Api\xca\x02\x0eChirpstack\\Api\xe2\x02\x1aGPBMetadata\\Chirpstack\\Apib\x06proto3"

var (
	file_api_device_profile_proto_rawDescOnce sync.Once
	file_api_device_profile_proto_rawDescData []byte
)

func file_api_device_profile_proto_rawDescGZIP() []byte {
	file_api_device_profile_proto_rawDescOnce.Do(func() {
		file_api_device_profile_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_device_profile_proto_rawDesc), len(file_api_device_profile_proto_rawDesc)))
	})
	return file_api_device_profile_proto_rawDescData
}

var file_api_device_profile_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_api_device_profile_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_device_profile_proto_goTypes = []any{
	(CodecRuntime)(0),                              // 0: api.CodecRuntime
	(MeasurementKind)(0),                           // 1: api.MeasurementKind
	(CadPeriodicity)(0),                            // 2: api.CadPeriodicity
	(SecondChAckOffset)(0),                         // 3: api.SecondChAckOffset
	(RelayModeActivation)(0),                       // 4: api.RelayModeActivation
	(Ts003Version)(0),                              // 5: api.Ts003Version
	(Ts004Version)(0),                              // 6: api.Ts004Version
	(Ts005Version)(0),                              // 7: api.Ts005Version
	(*DeviceProfile)(nil),                          // 8: api.DeviceProfile
	(*Measurement)(nil),                            // 9: api.Measurement
	(*AppLayerParams)(nil),                         // 10: api.AppLayerParams
	(*DeviceProfileListItem)(nil),                  // 11: api.DeviceProfileListItem
	(*CreateDeviceProfileRequest)(nil),             // 12: api.CreateDeviceProfileRequest
	(*CreateDeviceProfileResponse)(nil),            // 13: api.CreateDeviceProfileResponse
	(*GetDeviceProfileRequest)(nil),                // 14: api.GetDeviceProfileRequest
	(*GetDeviceProfileResponse)(nil),               // 15: api.GetDeviceProfileResponse
	(*UpdateDeviceProfileRequest)(nil),             // 16: api.UpdateDeviceProfileRequest
	(*DeleteDeviceProfileRequest)(nil),             // 17: api.DeleteDeviceProfileRequest
	(*ListDeviceProfilesRequest)(nil),              // 18: api.ListDeviceProfilesRequest
	(*ListDeviceProfilesResponse)(nil),             // 19: api.ListDeviceProfilesResponse
	(*ListDeviceProfileAdrAlgorithmsResponse)(nil), // 20: api.ListDeviceProfileAdrAlgorithmsResponse
	(*AdrAlgorithmListItem)(nil),                   // 21: api.AdrAlgorithmListItem
	nil,                                            // 22: api.DeviceProfile.TagsEntry
	nil,                                            // 23: api.DeviceProfile.MeasurementsEntry
	(common.Region)(0),                             // 24: common.Region
	(common.MacVersion)(0),                         // 25: common.MacVersion
	(common.RegParamsRevision)(0),                  // 26: common.RegParamsRevision
	(*timestamppb.Timestamp)(nil),                  // 27: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                          // 28: google.protobuf.Empty
}
var file_api_device_profile_proto_depIdxs = []int32{
	24, // 0: api.DeviceProfile.region:type_name -> common.Region
	25, // 1: api.DeviceProfile.mac_version:type_name -> common.MacVersion
	26, // 2: api.DeviceProfile.reg_params_revision:type_name -> common.RegParamsRevision
	0,  // 3: api.DeviceProfile.payload_codec_runtime:type_name -> api.CodecRuntime
	22, // 4: api.DeviceProfile.tags:type_name -> api.DeviceProfile.TagsEntry
	23, // 5: api.DeviceProfile.measurements:type_name -> api.DeviceProfile.MeasurementsEntry
	2,  // 6: api.DeviceProfile.relay_cad_periodicity:type_name -> api.CadPeriodicity
	3,  // 7: api.DeviceProfile.relay_second_channel_ack_offset:type_name -> api.SecondChAckOffset
	4,  // 8: api.DeviceProfile.relay_ed_activation_mode:type_name -> api.RelayModeActivation
	10, // 9: api.DeviceProfile.app_layer_params:type_name -> api.AppLayerParams
	1,  // 10: api.Measurement.kind:type_name -> api.MeasurementKind
	5,  // 11: api.AppLayerParams.ts003_version:type_name -> api.Ts003Version
	6,  // 12: api.AppLayerParams.ts004_version:type_name -> api.Ts004Version
	7,  // 13: api.AppLayerParams.ts005_version:type_name -> api.Ts005Version
	27, // 14: api.DeviceProfileListItem.created_at:type_name -> google.protobuf.Timestamp
	27, // 15: api.DeviceProfileListItem.updated_at:type_name -> google.protobuf.Timestamp
	24, // 16: api.DeviceProfileListItem.region:type_name -> common.Region
	25, // 17: api.DeviceProfileListItem.mac_version:type_name -> common.MacVersion
	26, // 18: api.DeviceProfileListItem.reg_params_revision:type_name -> common.RegParamsRevision
	8,  // 19: api.CreateDeviceProfileRequest.device_profile:type_name -> api.DeviceProfile
	8,  // 20: api.GetDeviceProfileResponse.device_profile:type_name -> api.DeviceProfile
	27, // 21: api.GetDeviceProfileResponse.created_at:type_name -> google.protobuf.Timestamp
	27, // 22: api.GetDeviceProfileResponse.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 23: api.UpdateDeviceProfileRequest.device_profile:type_name -> api.DeviceProfile
	11, // 24: api.ListDeviceProfilesResponse.result:type_name -> api.DeviceProfileListItem
	21, // 25: api.ListDeviceProfileAdrAlgorithmsResponse.result:type_name -> api.AdrAlgorithmListItem
	9,  // 26: api.DeviceProfile.MeasurementsEntry.value:type_name -> api.Measurement
	12, // 27: api.DeviceProfileService.Create:input_type -> api.CreateDeviceProfileRequest
	14, // 28: api.DeviceProfileService.Get:input_type -> api.GetDeviceProfileRequest
	16, // 29: api.DeviceProfileService.Update:input_type -> api.UpdateDeviceProfileRequest
	17, // 30: api.DeviceProfileService.Delete:input_type -> api.DeleteDeviceProfileRequest
	18, // 31: api.DeviceProfileService.List:input_type -> api.ListDeviceProfilesRequest
	28, // 32: api.DeviceProfileService.ListAdrAlgorithms:input_type -> google.protobuf.Empty
	13, // 33: api.DeviceProfileService.Create:output_type -> api.CreateDeviceProfileResponse
	15, // 34: api.DeviceProfileService.Get:output_type -> api.GetDeviceProfileResponse
	28, // 35: api.DeviceProfileService.Update:output_type -> google.protobuf.Empty
	28, // 36: api.DeviceProfileService.Delete:output_type -> google.protobuf.Empty
	19, // 37: api.DeviceProfileService.List:output_type -> api.ListDeviceProfilesResponse
	20, // 38: api.DeviceProfileService.ListAdrAlgorithms:output_type -> api.ListDeviceProfileAdrAlgorithmsResponse
	33, // [33:39] is the sub-list for method output_type
	27, // [27:33] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_api_device_profile_proto_init() }
func file_api_device_profile_proto_init() {
	if File_api_device_profile_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_device_profile_proto_rawDesc), len(file_api_device_profile_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_device_profile_proto_goTypes,
		DependencyIndexes: file_api_device_profile_proto_depIdxs,
		EnumInfos:         file_api_device_profile_proto_enumTypes,
		MessageInfos:      file_api_device_profile_proto_msgTypes,
	}.Build()
	File_api_device_profile_proto = out.File
	file_api_device_profile_proto_goTypes = nil
	file_api_device_profile_proto_depIdxs = nil
}
