// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.2
// source: api/fuota.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	FuotaService_CreateDeployment_FullMethodName = "/api.FuotaService/CreateDeployment"
	FuotaService_GetDeployment_FullMethodName    = "/api.FuotaService/GetDeployment"
	FuotaService_UpdateDeployment_FullMethodName = "/api.FuotaService/UpdateDeployment"
	FuotaService_DeleteDeployment_FullMethodName = "/api.FuotaService/DeleteDeployment"
	FuotaService_StartDeployment_FullMethodName  = "/api.FuotaService/StartDeployment"
	FuotaService_ListDeployments_FullMethodName  = "/api.FuotaService/ListDeployments"
	FuotaService_AddDevices_FullMethodName       = "/api.FuotaService/AddDevices"
	FuotaService_RemoveDevices_FullMethodName    = "/api.FuotaService/RemoveDevices"
	FuotaService_ListDevices_FullMethodName      = "/api.FuotaService/ListDevices"
	FuotaService_AddGateways_FullMethodName      = "/api.FuotaService/AddGateways"
	FuotaService_ListGateways_FullMethodName     = "/api.FuotaService/ListGateways"
	FuotaService_RemoveGateways_FullMethodName   = "/api.FuotaService/RemoveGateways"
	FuotaService_ListJobs_FullMethodName         = "/api.FuotaService/ListJobs"
)

// FuotaServiceClient is the client API for FuotaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// FuotaService is the service providing API methods for FUOTA deployments.
type FuotaServiceClient interface {
	// Create the given FUOTA deployment.
	CreateDeployment(ctx context.Context, in *CreateFuotaDeploymentRequest, opts ...grpc.CallOption) (*CreateFuotaDeploymentResponse, error)
	// Get the FUOTA deployment for the given ID.
	GetDeployment(ctx context.Context, in *GetFuotaDeploymentRequest, opts ...grpc.CallOption) (*GetFuotaDeploymentResponse, error)
	// Update the given FUOTA deployment.
	UpdateDeployment(ctx context.Context, in *UpdateFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Delete the FUOTA deployment for the given ID.
	DeleteDeployment(ctx context.Context, in *DeleteFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Start the FUOTA deployment.
	StartDeployment(ctx context.Context, in *StartFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// List the FUOTA deployments.
	ListDeployments(ctx context.Context, in *ListFuotaDeploymentsRequest, opts ...grpc.CallOption) (*ListFuotaDeploymentsResponse, error)
	// Add the given DevEUIs to the FUOTA deployment.
	AddDevices(ctx context.Context, in *AddDevicesToFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Remove the given DevEUIs from the FUOTA deployment.
	RemoveDevices(ctx context.Context, in *RemoveDevicesFromFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// List FUOTA Deployment devices.
	ListDevices(ctx context.Context, in *ListFuotaDeploymentDevicesRequest, opts ...grpc.CallOption) (*ListFuotaDeploymentDevicesResponse, error)
	// Add the given Gateway IDs to the FUOTA deployment.
	// By default, ChirpStack will automatically select the minimum amount of
	// gateways needed to cover all devices within the multicast-group. Setting
	// the gateways manually overrides this behaviour.
	AddGateways(ctx context.Context, in *AddGatewaysToFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// List the gateways added to the FUOTA deployment.
	ListGateways(ctx context.Context, in *ListFuotaDeploymentGatewaysRequest, opts ...grpc.CallOption) (*ListFuotaDeploymentGatewaysResponse, error)
	// Remove the given Gateway IDs from the FUOTA deployment.
	RemoveGateways(ctx context.Context, in *RemoveGatewaysFromFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// List jobs for the given FUOTA deployment.
	ListJobs(ctx context.Context, in *ListFuotaDeploymentJobsRequest, opts ...grpc.CallOption) (*ListFuotaDeploymentJobsResponse, error)
}

type fuotaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFuotaServiceClient(cc grpc.ClientConnInterface) FuotaServiceClient {
	return &fuotaServiceClient{cc}
}

func (c *fuotaServiceClient) CreateDeployment(ctx context.Context, in *CreateFuotaDeploymentRequest, opts ...grpc.CallOption) (*CreateFuotaDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateFuotaDeploymentResponse)
	err := c.cc.Invoke(ctx, FuotaService_CreateDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) GetDeployment(ctx context.Context, in *GetFuotaDeploymentRequest, opts ...grpc.CallOption) (*GetFuotaDeploymentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetFuotaDeploymentResponse)
	err := c.cc.Invoke(ctx, FuotaService_GetDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) UpdateDeployment(ctx context.Context, in *UpdateFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, FuotaService_UpdateDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) DeleteDeployment(ctx context.Context, in *DeleteFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, FuotaService_DeleteDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) StartDeployment(ctx context.Context, in *StartFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, FuotaService_StartDeployment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) ListDeployments(ctx context.Context, in *ListFuotaDeploymentsRequest, opts ...grpc.CallOption) (*ListFuotaDeploymentsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFuotaDeploymentsResponse)
	err := c.cc.Invoke(ctx, FuotaService_ListDeployments_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) AddDevices(ctx context.Context, in *AddDevicesToFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, FuotaService_AddDevices_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) RemoveDevices(ctx context.Context, in *RemoveDevicesFromFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, FuotaService_RemoveDevices_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) ListDevices(ctx context.Context, in *ListFuotaDeploymentDevicesRequest, opts ...grpc.CallOption) (*ListFuotaDeploymentDevicesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFuotaDeploymentDevicesResponse)
	err := c.cc.Invoke(ctx, FuotaService_ListDevices_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) AddGateways(ctx context.Context, in *AddGatewaysToFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, FuotaService_AddGateways_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) ListGateways(ctx context.Context, in *ListFuotaDeploymentGatewaysRequest, opts ...grpc.CallOption) (*ListFuotaDeploymentGatewaysResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFuotaDeploymentGatewaysResponse)
	err := c.cc.Invoke(ctx, FuotaService_ListGateways_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) RemoveGateways(ctx context.Context, in *RemoveGatewaysFromFuotaDeploymentRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, FuotaService_RemoveGateways_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fuotaServiceClient) ListJobs(ctx context.Context, in *ListFuotaDeploymentJobsRequest, opts ...grpc.CallOption) (*ListFuotaDeploymentJobsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListFuotaDeploymentJobsResponse)
	err := c.cc.Invoke(ctx, FuotaService_ListJobs_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FuotaServiceServer is the server API for FuotaService service.
// All implementations must embed UnimplementedFuotaServiceServer
// for forward compatibility.
//
// FuotaService is the service providing API methods for FUOTA deployments.
type FuotaServiceServer interface {
	// Create the given FUOTA deployment.
	CreateDeployment(context.Context, *CreateFuotaDeploymentRequest) (*CreateFuotaDeploymentResponse, error)
	// Get the FUOTA deployment for the given ID.
	GetDeployment(context.Context, *GetFuotaDeploymentRequest) (*GetFuotaDeploymentResponse, error)
	// Update the given FUOTA deployment.
	UpdateDeployment(context.Context, *UpdateFuotaDeploymentRequest) (*emptypb.Empty, error)
	// Delete the FUOTA deployment for the given ID.
	DeleteDeployment(context.Context, *DeleteFuotaDeploymentRequest) (*emptypb.Empty, error)
	// Start the FUOTA deployment.
	StartDeployment(context.Context, *StartFuotaDeploymentRequest) (*emptypb.Empty, error)
	// List the FUOTA deployments.
	ListDeployments(context.Context, *ListFuotaDeploymentsRequest) (*ListFuotaDeploymentsResponse, error)
	// Add the given DevEUIs to the FUOTA deployment.
	AddDevices(context.Context, *AddDevicesToFuotaDeploymentRequest) (*emptypb.Empty, error)
	// Remove the given DevEUIs from the FUOTA deployment.
	RemoveDevices(context.Context, *RemoveDevicesFromFuotaDeploymentRequest) (*emptypb.Empty, error)
	// List FUOTA Deployment devices.
	ListDevices(context.Context, *ListFuotaDeploymentDevicesRequest) (*ListFuotaDeploymentDevicesResponse, error)
	// Add the given Gateway IDs to the FUOTA deployment.
	// By default, ChirpStack will automatically select the minimum amount of
	// gateways needed to cover all devices within the multicast-group. Setting
	// the gateways manually overrides this behaviour.
	AddGateways(context.Context, *AddGatewaysToFuotaDeploymentRequest) (*emptypb.Empty, error)
	// List the gateways added to the FUOTA deployment.
	ListGateways(context.Context, *ListFuotaDeploymentGatewaysRequest) (*ListFuotaDeploymentGatewaysResponse, error)
	// Remove the given Gateway IDs from the FUOTA deployment.
	RemoveGateways(context.Context, *RemoveGatewaysFromFuotaDeploymentRequest) (*emptypb.Empty, error)
	// List jobs for the given FUOTA deployment.
	ListJobs(context.Context, *ListFuotaDeploymentJobsRequest) (*ListFuotaDeploymentJobsResponse, error)
	mustEmbedUnimplementedFuotaServiceServer()
}

// UnimplementedFuotaServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedFuotaServiceServer struct{}

func (UnimplementedFuotaServiceServer) CreateDeployment(context.Context, *CreateFuotaDeploymentRequest) (*CreateFuotaDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeployment not implemented")
}
func (UnimplementedFuotaServiceServer) GetDeployment(context.Context, *GetFuotaDeploymentRequest) (*GetFuotaDeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeployment not implemented")
}
func (UnimplementedFuotaServiceServer) UpdateDeployment(context.Context, *UpdateFuotaDeploymentRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeployment not implemented")
}
func (UnimplementedFuotaServiceServer) DeleteDeployment(context.Context, *DeleteFuotaDeploymentRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeployment not implemented")
}
func (UnimplementedFuotaServiceServer) StartDeployment(context.Context, *StartFuotaDeploymentRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartDeployment not implemented")
}
func (UnimplementedFuotaServiceServer) ListDeployments(context.Context, *ListFuotaDeploymentsRequest) (*ListFuotaDeploymentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeployments not implemented")
}
func (UnimplementedFuotaServiceServer) AddDevices(context.Context, *AddDevicesToFuotaDeploymentRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDevices not implemented")
}
func (UnimplementedFuotaServiceServer) RemoveDevices(context.Context, *RemoveDevicesFromFuotaDeploymentRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDevices not implemented")
}
func (UnimplementedFuotaServiceServer) ListDevices(context.Context, *ListFuotaDeploymentDevicesRequest) (*ListFuotaDeploymentDevicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDevices not implemented")
}
func (UnimplementedFuotaServiceServer) AddGateways(context.Context, *AddGatewaysToFuotaDeploymentRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGateways not implemented")
}
func (UnimplementedFuotaServiceServer) ListGateways(context.Context, *ListFuotaDeploymentGatewaysRequest) (*ListFuotaDeploymentGatewaysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGateways not implemented")
}
func (UnimplementedFuotaServiceServer) RemoveGateways(context.Context, *RemoveGatewaysFromFuotaDeploymentRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveGateways not implemented")
}
func (UnimplementedFuotaServiceServer) ListJobs(context.Context, *ListFuotaDeploymentJobsRequest) (*ListFuotaDeploymentJobsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListJobs not implemented")
}
func (UnimplementedFuotaServiceServer) mustEmbedUnimplementedFuotaServiceServer() {}
func (UnimplementedFuotaServiceServer) testEmbeddedByValue()                      {}

// UnsafeFuotaServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FuotaServiceServer will
// result in compilation errors.
type UnsafeFuotaServiceServer interface {
	mustEmbedUnimplementedFuotaServiceServer()
}

func RegisterFuotaServiceServer(s grpc.ServiceRegistrar, srv FuotaServiceServer) {
	// If the following call pancis, it indicates UnimplementedFuotaServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&FuotaService_ServiceDesc, srv)
}

func _FuotaService_CreateDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFuotaDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).CreateDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_CreateDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).CreateDeployment(ctx, req.(*CreateFuotaDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_GetDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFuotaDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).GetDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_GetDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).GetDeployment(ctx, req.(*GetFuotaDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_UpdateDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFuotaDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).UpdateDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_UpdateDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).UpdateDeployment(ctx, req.(*UpdateFuotaDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_DeleteDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFuotaDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).DeleteDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_DeleteDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).DeleteDeployment(ctx, req.(*DeleteFuotaDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_StartDeployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartFuotaDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).StartDeployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_StartDeployment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).StartDeployment(ctx, req.(*StartFuotaDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_ListDeployments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFuotaDeploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).ListDeployments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_ListDeployments_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).ListDeployments(ctx, req.(*ListFuotaDeploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_AddDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDevicesToFuotaDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).AddDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_AddDevices_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).AddDevices(ctx, req.(*AddDevicesToFuotaDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_RemoveDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDevicesFromFuotaDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).RemoveDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_RemoveDevices_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).RemoveDevices(ctx, req.(*RemoveDevicesFromFuotaDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_ListDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFuotaDeploymentDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).ListDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_ListDevices_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).ListDevices(ctx, req.(*ListFuotaDeploymentDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_AddGateways_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGatewaysToFuotaDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).AddGateways(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_AddGateways_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).AddGateways(ctx, req.(*AddGatewaysToFuotaDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_ListGateways_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFuotaDeploymentGatewaysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).ListGateways(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_ListGateways_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).ListGateways(ctx, req.(*ListFuotaDeploymentGatewaysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_RemoveGateways_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveGatewaysFromFuotaDeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).RemoveGateways(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_RemoveGateways_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).RemoveGateways(ctx, req.(*RemoveGatewaysFromFuotaDeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FuotaService_ListJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFuotaDeploymentJobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuotaServiceServer).ListJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FuotaService_ListJobs_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuotaServiceServer).ListJobs(ctx, req.(*ListFuotaDeploymentJobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FuotaService_ServiceDesc is the grpc.ServiceDesc for FuotaService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FuotaService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.FuotaService",
	HandlerType: (*FuotaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDeployment",
			Handler:    _FuotaService_CreateDeployment_Handler,
		},
		{
			MethodName: "GetDeployment",
			Handler:    _FuotaService_GetDeployment_Handler,
		},
		{
			MethodName: "UpdateDeployment",
			Handler:    _FuotaService_UpdateDeployment_Handler,
		},
		{
			MethodName: "DeleteDeployment",
			Handler:    _FuotaService_DeleteDeployment_Handler,
		},
		{
			MethodName: "StartDeployment",
			Handler:    _FuotaService_StartDeployment_Handler,
		},
		{
			MethodName: "ListDeployments",
			Handler:    _FuotaService_ListDeployments_Handler,
		},
		{
			MethodName: "AddDevices",
			Handler:    _FuotaService_AddDevices_Handler,
		},
		{
			MethodName: "RemoveDevices",
			Handler:    _FuotaService_RemoveDevices_Handler,
		},
		{
			MethodName: "ListDevices",
			Handler:    _FuotaService_ListDevices_Handler,
		},
		{
			MethodName: "AddGateways",
			Handler:    _FuotaService_AddGateways_Handler,
		},
		{
			MethodName: "ListGateways",
			Handler:    _FuotaService_ListGateways_Handler,
		},
		{
			MethodName: "RemoveGateways",
			Handler:    _FuotaService_RemoveGateways_Handler,
		},
		{
			MethodName: "ListJobs",
			Handler:    _FuotaService_ListJobs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/fuota.proto",
}
